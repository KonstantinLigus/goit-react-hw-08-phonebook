{"version":3,"file":"static/js/401.69c05654.chunk.js","mappings":"yMAGaA,EAAMC,EAAAA,GAAAA,IAAH,qCACZC,EAAAA,GACAC,EAAAA,G,gLCDSC,EAAcH,EAAAA,GAAAA,MAAH,uFAMXI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yJAUXM,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChC,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACC,EAAD,UAAcD,GAAlB,GAHe,EAMrBC,EAAcV,EAAAA,GAAAA,EAAH,kF,qICxBXW,E,QAAcX,GAAAA,OAAH,gK,uCCcXY,EAAe,WAC1B,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLF,GAASG,EAAAA,EAAAA,KACV,CACF,GAAE,CAACH,IAoBJ,OACE,SAAC,KAAD,CAAQI,cAnBY,CACpBf,KAAM,GACNgB,MAAO,GACPC,SAAU,IAgB4BC,SAblB,SAACC,EAAQC,GAC7B,IAAQJ,EAA0BG,EAA1BH,MAAOhB,EAAmBmB,EAAnBnB,KAAMiB,EAAaE,EAAbF,SACrBG,EAAQC,UAAU,CAChBF,OAAQ,CACNnB,KAAM,GACNgB,MAAO,GACPC,SAAU,MAGdN,GAASW,EAAAA,EAAAA,IAAS,CAAEtB,KAAAA,EAAMgB,MAAAA,EAAOC,SAAAA,IAClC,EAGC,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAaM,QAAQ,OAArB,wBACA,SAAC,KAAD,CAAaC,UAAU,WAAWC,GAAG,OAAOC,KAAK,OAAO1B,KAAK,SAC5DM,GAA0B,gBAAjBG,IACR,SAAC,KAAD,UAAcA,KAEhB,SAAC,KAAD,CAAac,QAAQ,QAArB,qBACA,SAAC,KAAD,CACEC,UAAU,WACVC,GAAG,QACHC,KAAK,QACL1B,KAAK,UAENM,GAA0B,iBAAjBG,IACR,SAAC,KAAD,UAAcA,KAEhB,SAAC,KAAD,CAAac,QAAQ,WAArB,wBACA,SAAC,KAAD,CACEC,UAAU,WACVC,GAAG,WACHC,KAAK,WACL1B,KAAK,cAEP,SAACI,EAAD,CAAasB,KAAK,SAAlB,0BAIP,ECjED,EANyB,kBACvB,SAAClC,EAAA,EAAD,CAAKmC,GAAI,GAAT,UACE,SAACtB,EAAD,KAFqB,C","sources":["components/Box.jsx","components/commonStyles/commonStyles.jsx","components/RegisterForm/RegisterFormStyled.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegistretionPage/RegistretionPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { layout, space } from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${layout}\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nexport const FieldStyled = styled(Field)`\n  display: block;\n  width: 300px;\n  height: 30px;\n  font-size: 14px;\n  :not(:last-of-type) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ErrorMessageStyled = ({ name }) => (\n  <ErrorMessage\n    name={name}\n    render={message => <ErrorStyled>{message}</ErrorStyled>}\n  />\n);\nexport const ErrorStyled = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const RegisterBtn = styled.button`\n  margin-top: 20px;\n  height: 30px;\n  font-size: 15px;\n  background-color: rgb(102, 178, 240);\n  border-color: rgb(102, 178, 240);\n`;\n","import { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ErrorStyled,\n  FieldStyled,\n  LabelStyled,\n} from 'components/commonStyles/commonStyles';\nimport { register } from 'redux/auth/authOperations';\nimport { RegisterBtn } from './RegisterFormStyled.styled';\nimport {\n  selectAuthError,\n  selectAuthErrorMessage,\n} from 'redux/auth/authSelectors';\nimport { useEffect } from 'react';\nimport { setUserError } from 'redux/auth/authSlice';\n\nexport const RegisterForm = () => {\n  const error = useSelector(selectAuthError);\n  const errorMessage = useSelector(selectAuthErrorMessage);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(setUserError());\n    };\n  }, [dispatch]);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const onSubmitClick = (values, actions) => {\n    const { email, name, password } = values;\n    actions.resetForm({\n      values: {\n        name: '',\n        email: '',\n        password: '',\n      },\n    });\n    dispatch(register({ name, email, password }));\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmitClick}>\n      <Form>\n        <LabelStyled htmlFor=\"name\">Username:</LabelStyled>\n        <FieldStyled className=\"Field_mg\" id=\"name\" type=\"text\" name=\"name\" />\n        {error && errorMessage === 'name in use' && (\n          <ErrorStyled>{errorMessage}</ErrorStyled>\n        )}\n        <LabelStyled htmlFor=\"email\">Email:</LabelStyled>\n        <FieldStyled\n          className=\"Field_mg\"\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n        />\n        {error && errorMessage === 'email in use' && (\n          <ErrorStyled>{errorMessage}</ErrorStyled>\n        )}\n        <LabelStyled htmlFor=\"password\">Password:</LabelStyled>\n        <FieldStyled\n          className=\"Field_mg\"\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n        />\n        <RegisterBtn type=\"submit\">Register</RegisterBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import { Box } from 'components/Box';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegistrationPage = () => (\n  <Box pl={10}>\n    <RegisterForm />\n  </Box>\n);\n\nexport default RegistrationPage;\n"],"names":["Box","styled","space","layout","LabelStyled","FieldStyled","Field","ErrorMessageStyled","name","render","message","ErrorStyled","RegisterBtn","RegisterForm","error","useSelector","selectAuthError","errorMessage","selectAuthErrorMessage","dispatch","useDispatch","useEffect","setUserError","initialValues","email","password","onSubmit","values","actions","resetForm","register","htmlFor","className","id","type","pl"],"sourceRoot":""}