{"version":3,"file":"static/js/279.84c4ca23.chunk.js","mappings":"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","sources":["components/commonStyles/FieldStyled.styled.jsx","components/commonStyles/LabelStyled.styled.jsx","components/Box.jsx","components/commonStyles/ErrorMessageStyled.styled.jsx","components/ContactForm/ContactFormStyled.styled.jsx","redux/contacts/conatacsSelectors.js","schema/index.js","components/ContactForm/ContactForm.jsx","icons/pencil.svg","components/ContactItem/ContactItemStyled.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsListStyled.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/FilterStyled.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPageStyled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FieldStyled = styled(Field)`\n  display: block;\n  width: 300px;\n  height: 30px;\n  font-size: 14px;\n  &.Field_mg {\n    margin-bottom: 15px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n","import styled from 'styled-components';\nimport { layout, space } from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${layout}\n`;\n","import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorMessageStyled = ({ name }) => (\n  <ErrorMessage name={name} render={message => <PStyled>{message}</PStyled>} />\n);\nconst PStyled = styled.p`\n  font-size: 14px;\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const ButtonSyled = styled.button`\n  margin-top: 20px;\n  height: 30px;\n  font-size: 15px;\n  background-color: rgb(0, 128, 0);\n  border-color: rgb(0, 128, 0);\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 20px;\n  font-weight: 300;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import * as Yup from 'yup';\n\nexport const Schema = Yup.object().shape({\n  name: Yup.string()\n    .required('Required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  phone: Yup.string()\n    .required('Required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n","import { Formik, Form } from 'formik';\nimport { Box } from 'components/Box';\nimport { FieldStyled } from '../commonStyles/FieldStyled.styled';\nimport { LabelStyled } from '../commonStyles/LabelStyled.styled';\nimport { ErrorMessageStyled } from '../commonStyles/ErrorMessageStyled.styled';\nimport { ButtonSyled, FormTitle } from './ContactFormStyled.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/conatactsOperations';\nimport { selectContacts } from 'redux/contacts/conatacsSelectors';\nimport { Schema } from 'schema';\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  function submitHandler(values, actions) {\n    const { name, phone } = values;\n    actions.resetForm({\n      values: {\n        name: '',\n        phone: '',\n      },\n    });\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, phone }));\n  }\n\n  return (\n    <Box p=\"20px\">\n      <FormTitle>Phonebook</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={Schema}\n        onSubmit={submitHandler}\n      >\n        <Form>\n          <LabelStyled htmlFor=\"name\">Name</LabelStyled>\n          <FieldStyled className=\"Field_mg\" id=\"name\" name=\"name\" />\n          <ErrorMessageStyled name=\"name\" />\n          <LabelStyled htmlFor=\"phone\">Phone</LabelStyled>\n          <FieldStyled id=\"phone\" name=\"phone\" />\n          <ErrorMessageStyled name=\"phone\" />\n          <ButtonSyled type=\"submit\">Add contact</ButtonSyled>\n        </Form>\n      </Formik>\n    </Box>\n  );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-pencil\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/pencil.372bf1c0dffabd88fa68e0c399f2ed7c.svg\";\nexport { ForwardRef as ReactComponent };","import { Field } from 'formik';\nimport styled from 'styled-components';\nimport { ReactComponent as EditLogo } from '../../icons/pencil.svg';\n\nexport const ButtonItemStyled = styled.button`\n  display: inline;\n  height: 30px;\n  font-size: 15px;\n  cursor: pointer;\n  background-color: ${props =>\n    props.type === 'submit' ? 'rgb(0, 140, 255)' : 'rgb(255, 44, 44)'};\n  border-color: rgb(255, 44, 44);\n`;\n\nexport const ContactInputStyled = styled(Field)`\n  width: ${props => props.value.length + 1 + 'ch'};\n  border-style: none;\n`;\n\nexport const EditLogoStyled = styled(EditLogo)`\n  cursor: pointer;\n  :hover {\n    fill: rgb(0, 140, 255);\n  }\n  :active {\n    box-shadow: 2px 2px 5px #fc894d;\n  }\n`;\n","import { Box } from 'components/Box';\nimport { ErrorMessageStyled } from 'components/commonStyles/ErrorMessageStyled.styled';\nimport { Form, Formik } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/conatactsOperations';\nimport { Schema } from 'schema';\nimport {\n  ButtonItemStyled,\n  ContactInputStyled,\n  EditLogoStyled,\n} from './ContactItemStyled.styled';\n\nexport function ContactItem({\n  contact: { name, phone, _id },\n  deleteBtnHandler,\n}) {\n  const [isInputNameReadOnly, setIsInputNameReadOnly] = useState(true);\n  const [isInputPhoneReadOnly, setIsInputPhoneReadOnly] = useState(true);\n  // const [isSaveBtnShow, setIsSaveBtnShow] = useState(false);\n  const inputNameRef = useRef(null);\n  const inputPhoneRef = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const onDocumentClick = e => {\n      setIsInputNameReadOnly(true);\n      setIsInputPhoneReadOnly(true);\n    };\n    document.addEventListener('click', onDocumentClick);\n    return () => document.removeEventListener('click', onDocumentClick);\n  }, []);\n\n  const onEditNameInputClick = e => {\n    e.stopPropagation();\n    setIsInputPhoneReadOnly(true);\n    setIsInputNameReadOnly(!isInputNameReadOnly);\n    inputNameRef.current.focus();\n  };\n  const onEditPhoneInputClick = e => {\n    e.stopPropagation();\n    setIsInputNameReadOnly(true);\n    setIsInputPhoneReadOnly(!isInputPhoneReadOnly);\n    inputPhoneRef.current.focus();\n  };\n\n  const submitHandler = (values, formikBag) => {\n    // if (values.name === name && values.phone === phone) {\n    //   return;\n    // }\n    dispatch(updateContact({ values, _id }));\n    formikBag.setSubmitting(false);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name, phone }}\n        validationSchema={Schema}\n        onSubmit={submitHandler}\n      >\n        {props => {\n          let isSaveBtnShow = false;\n          const onInputChange = values => {\n            if (values.name === name && values.phone === phone) {\n              return;\n            }\n            isSaveBtnShow = true;\n          };\n          onInputChange(props.values);\n          return (\n            <Form>\n              <div>\n                <ContactInputStyled\n                  name=\"name\"\n                  value={props.values.name}\n                  readOnly={isInputNameReadOnly}\n                  innerRef={inputNameRef}\n                />\n                <EditLogoStyled onClick={onEditNameInputClick} />\n                <ErrorMessageStyled name=\"name\" />\n              </div>\n              <div>\n                <ContactInputStyled\n                  name=\"phone\"\n                  value={props.values.phone}\n                  readOnly={isInputPhoneReadOnly}\n                  innerRef={inputPhoneRef}\n                />\n                <EditLogoStyled onClick={onEditPhoneInputClick} />\n                <ErrorMessageStyled name=\"phone\" />\n              </div>\n              {isSaveBtnShow && (\n                <Box mt={10}>\n                  <ButtonItemStyled type=\"submit\">Save</ButtonItemStyled>\n                </Box>\n              )}\n            </Form>\n          );\n        }}\n      </Formik>\n\n      <ButtonItemStyled type=\"button\" id={_id} onClick={deleteBtnHandler}>\n        Delete\n      </ButtonItemStyled>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  max-width: 480px;\n  padding: 8px;\n  border: 1px solid black;\n  :not(:first-child) {\n    margin-top: 10px;\n  }\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/conatactsOperations';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/conatacsSelectors';\nimport { ContactItemStyled } from 'components/ContactsList/ContactsListStyled.styled';\n\nexport function ContactsList() {\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filterToLowerCase = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterToLowerCase)\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  function deleteBtnHandler(e) {\n    dispatch(deleteContact(e.target.id));\n  }\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {!error && (\n        <ul>\n          {filteredContacts.map(contact => (\n            <ContactItemStyled key={contact._id}>\n              <ContactItem\n                contact={contact}\n                deleteBtnHandler={deleteBtnHandler}\n              />\n            </ContactItemStyled>\n          ))}\n        </ul>\n      )}\n      {contacts.length === 0 && <p>There is empty here</p>}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.input`\n  width: 300px;\n  height: 30px;\n  margin-bottom: 20px;\n`;\n","import { Box } from 'components/Box';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/filterSlice';\nimport { FilterStyled } from './FilterStyled.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  function changeFilterHandler(e) {\n    dispatch(filter(e.target.value));\n  }\n  return (\n    <>\n      <Box htmlFor=\"filter\" display=\"block\" mb=\"10px\" as=\"label\">\n        Find contacts by name\n      </Box>\n      <FilterStyled\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilterHandler}\n      />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: 20px;\n  font-weight: 300;\n`;\n","import { Box } from 'components/Box';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsTitle } from './ContactsPageStyled';\n\nconst ContactsPage = () => (\n  <>\n    <ContactForm />\n    <Box p=\"20px\">\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <ContactsList />\n    </Box>\n  </>\n);\n\nexport default ContactsPage;\n"],"names":["FieldStyled","styled","Field","LabelStyled","Box","space","layout","ErrorMessageStyled","name","render","message","PStyled","ButtonSyled","FormTitle","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","Schema","Yup","shape","required","matches","phone","initialValues","ContactForm","useSelector","dispatch","useDispatch","p","validationSchema","onSubmit","values","actions","resetForm","some","contact","includes","alert","addContact","L","htmlFor","className","id","type","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPencil","_ref","svgRef","title","titleId","props","xmlns","width","height","fill","viewBox","ref","d","ForwardRef","ButtonItemStyled","ContactInputStyled","value","EditLogoStyled","EditLogo","ContactItem","_id","deleteBtnHandler","useState","isInputNameReadOnly","setIsInputNameReadOnly","isInputPhoneReadOnly","setIsInputPhoneReadOnly","inputNameRef","useRef","inputPhoneRef","useEffect","onDocumentClick","e","document","addEventListener","removeEventListener","onEditNameInputClick","stopPropagation","current","focus","onEditPhoneInputClick","formikBag","updateContact","setSubmitting","isSaveBtnShow","readOnly","innerRef","onClick","mt","ContactItemStyled","ContactsList","filterToLowerCase","toLowerCase","filteredContacts","deleteContact","fetchContacts","map","FilterStyled","Filter","display","mb","as","onChange","ContactsTitle"],"sourceRoot":""}