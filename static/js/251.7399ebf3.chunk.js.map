{"version":3,"file":"static/js/251.7399ebf3.chunk.js","mappings":"iPAGaA,EAAqBC,EAAAA,GAAAA,IAAH,6CAIlBC,EAAcD,EAAAA,GAAAA,OAAH,wJAQXE,EAAYF,EAAAA,GAAAA,GAAH,4FAMTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kF,2DCHjBK,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,MAAO,IAGF,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAE3BC,GAAWC,EAAAA,EAAAA,MAoBjB,OACE,UAACjB,EAAD,YACE,SAACG,EAAD,+BACA,SAAC,KAAD,CACEG,cAAeA,EACfY,iBAAkBC,EAAAA,EAClBC,SAxBN,SAAuBC,EAAQC,GAC7B,IAAQf,EAAuBc,EAAvBd,KAAMC,EAAiBa,EAAjBb,MAAOC,EAAUY,EAAVZ,MAQrB,GAPAa,EAAQC,UAAU,CAChBF,OAAQ,CACNd,KAAM,GACNC,MAAO,GACPC,MAAO,OAGPE,EAASa,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,SAASnB,EAA1B,IAIzB,MAAc,KAAVE,EACKO,GAASW,EAAAA,EAAAA,IAAW,CAAEpB,KAAAA,EAAMC,MAAAA,UAErCQ,GAASW,EAAAA,EAAAA,IAAW,CAAEpB,KAAAA,EAAMC,MAAAA,EAAOC,MAAAA,KANjCmB,MAAM,GAAD,OAAIrB,EAAJ,2BAOR,EAIG,UAKE,UAACH,EAAD,YACE,SAAC,KAAD,CAAayB,QAAQ,OAArB,mBACA,SAAC,KAAD,CAAaC,GAAG,OAAOvB,KAAK,UAC5B,SAAC,KAAD,CAAoBA,KAAK,UACzB,SAAC,KAAD,CAAasB,QAAQ,QAArB,oBACA,SAAC,KAAD,CAAaC,GAAG,QAAQvB,KAAK,WAC7B,SAAC,KAAD,CAAoBA,KAAK,UACP,YAAjBO,IACC,iCACE,SAAC,KAAD,CAAae,QAAQ,QAArB,oBACA,SAAC,KAAD,CAAaC,GAAG,QAAQvB,KAAK,WAC7B,SAAC,KAAD,CAAoBA,KAAK,cAG7B,SAACL,EAAD,CAAa6B,KAAK,SAAlB,gCAKT,C,2CChDD,EAlBqB,WACnB,IAAMf,GAAWC,EAAAA,EAAAA,MAKjB,OAJAe,EAAAA,EAAAA,YAAU,WACRhB,GAASiB,EAAAA,EAAAA,MACV,GAAE,CAACjB,KAGF,iCACE,SAACN,EAAD,KACA,UAACwB,EAAA,EAAD,CAAKC,EAAE,OAAP,WACE,SAAC,EAAAC,EAAD,wBACA,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,SAIP,C","sources":["components/ContactForm/ContactFormStyled.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactFormWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ButtonSyled = styled.button`\n  margin-top: 20px;\n  height: 30px;\n  font-size: 15px;\n  background-color: rgb(0, 128, 0);\n  border-color: rgb(0, 128, 0);\n`;\n\nexport const FormTitle = styled.h2`\n  margin-bottom: 20px;\n  font-weight: 300;\n  text-align: center;\n`;\n\nexport const FormStyled = styled(Form)`\n  max-width: 320px;\n  margin: auto;\n  padding: 0 10px;\n`;\n","import { Formik } from 'formik';\nimport {\n  FieldStyled,\n  LabelStyled,\n  ErrorMessageStyled,\n} from '../commonStyles/commonStyles';\nimport {\n  ButtonSyled,\n  ContactFormWrapper,\n  FormStyled,\n  FormTitle,\n} from './ContactFormStyled.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/conatactsOperations';\nimport { selectContacts } from 'redux/contacts/conatacsSelectors';\nimport { Schema } from 'schema';\nimport { selectSubscription } from 'redux/auth/authSelectors';\n\nconst initialValues = {\n  name: '',\n  phone: '',\n  email: '',\n};\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const subscription = useSelector(selectSubscription);\n\n  const dispatch = useDispatch();\n\n  function submitHandler(values, actions) {\n    const { name, phone, email } = values;\n    actions.resetForm({\n      values: {\n        name: '',\n        phone: '',\n        email: '',\n      },\n    });\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (email === '') {\n      return dispatch(addContact({ name, phone }));\n    }\n    dispatch(addContact({ name, phone, email }));\n  }\n  return (\n    <ContactFormWrapper>\n      <FormTitle>Add new contact</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={Schema}\n        onSubmit={submitHandler}\n      >\n        <FormStyled>\n          <LabelStyled htmlFor=\"name\">Name</LabelStyled>\n          <FieldStyled id=\"name\" name=\"name\" />\n          <ErrorMessageStyled name=\"name\" />\n          <LabelStyled htmlFor=\"phone\">Phone</LabelStyled>\n          <FieldStyled id=\"phone\" name=\"phone\" />\n          <ErrorMessageStyled name=\"phone\" />\n          {subscription !== 'starter' && (\n            <>\n              <LabelStyled htmlFor=\"email\">Email</LabelStyled>\n              <FieldStyled id=\"email\" name=\"email\" />\n              <ErrorMessageStyled name=\"email\" />\n            </>\n          )}\n          <ButtonSyled type=\"submit\">Add contact</ButtonSyled>\n        </FormStyled>\n      </Formik>\n    </ContactFormWrapper>\n  );\n}\n","import { Box } from 'components/Box';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/conatactsOperations';\nimport { ContactsTitle } from './ContactsPageStyled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Box p=\"10px\">\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        <ContactsList />\n      </Box>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactFormWrapper","styled","ButtonSyled","FormTitle","FormStyled","Form","initialValues","name","phone","email","ContactForm","contacts","useSelector","selectContacts","subscription","selectSubscription","dispatch","useDispatch","validationSchema","Schema","onSubmit","values","actions","resetForm","some","contact","includes","addContact","alert","htmlFor","id","type","useEffect","fetchContacts","Box","p","C","Filter","ContactsList"],"sourceRoot":""}